---
import { ViewTransitions } from 'astro:transitions'

import { ENABLE_LIGHTBOX, PUBLIC_GA_TRACKING_ID } from '../server-constants'
import { getDatabase } from '../lib/notion/client'
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers'

import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
import SearchModal from '../components/SearchModal.astro'
import SearchButton from '../components/SearchButton.astro'
import Navbar from '@/components/Navbar.astro'
import Footer from '@/components/Footer.astro'

export interface Props {
	title: string
	description: string
	path: string
	ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(getStaticFilePath('/og-image.webp'), Astro.site)

let coverImageURL: string
if (database.Cover) {
	if (database.Cover.Type === 'external') {
		coverImageURL = database.Cover.Url
	} else if (database.Cover.Type === 'file') {
		try {
			coverImageURL = filePath(new URL(database.Cover.Url))
		} catch (err) {
			console.log('Invalid DB cover image URL')
		}
	}
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
	try {
		customIconURL = filePath(new URL(database.Icon.Url))
	} catch (err) {
		console.log('Invalid DB custom icon URL')
	}
}
---

<!doctype html>
<html lang='en'>
	<head>
		<ViewTransitions fallback='animate' />
		<meta name='viewport' content='width=device-width, initial-scale=1.0' />
		<meta name='robots' content='max-image-preview:large' />
		<meta charset='UTF-8' />
		<meta name='generator' content={Astro.generator} />
		<title>{siteTitle}</title>
		<meta name='description' content={siteDescription} />
		<link rel='canonical' href={siteURL} />
		<meta property='og:url' content={siteURL} />
		<meta property='og:title' content={siteTitle} />
		<meta property='og:description' content={siteDescription} />
		<meta property='og:site_name' content={database.Title} />
		<meta property='og:image' content={ogImage || siteOGImage} />
		<meta name='twitter:title' content={siteTitle} />
		<meta name='twitter:description' content={siteDescription} />
		<meta name='twitter:card' content='summary_large_image' />
		<meta name='twitter:image' content={ogImage || siteOGImage} />
		<link rel='manifest' href='/site.webmanifest' />
		<link rel='icon' type='image/x-icon' href='/favicon.ico' />
		<meta name='theme-color' content='#FC4492' />
		<!-- <link
			rel='stylesheet'
			href='https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css'
			integrity='sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV'
			crossorigin='anonymous'
		/>
		<script
			defer
			src='https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js'
			integrity='sha384-XjKyOOlGwcjNTAIQHIpgOno0Hl1YQqzUOEleOLALmuqehneUG+vnGctmUb0ZY0l8'
			crossorigin='anonymous' /> -->

		<!-- Preload local fonts -->
		<link rel='preconnect' href='https://rsms.me/' />
		<link rel='stylesheet' href='https://rsms.me/inter/inter.css' />
	</head>
	<body>
		<div class='relative flex flex-col'>
			<!-- header -->
			<Navbar />
			<!-- end header -->
			<div class='w-full mx-auto'><slot name='main' /></div>
			<GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
		</div>

		{
			ENABLE_LIGHTBOX && (
				<script src={getStaticFilePath('/scripts/fslightbox.js')} />
			)
		}
		<script
			src='https://cdn.jsdelivr.net/npm/@preline/preline@1.0.0/dist/hs-ui.bundle.min.js'
		></script>
		<style>
			main footer span {
				color: #777;
			}
			main footer a {
				color: inherit;
				text-decoration: underline;
			}
		</style>

		<style is:global>
			@import '@radix-ui/colors/gray.css';
			@import '@radix-ui/colors/slate.css';
			@import '@radix-ui/colors/mauve.css';

			@import '@radix-ui/colors/blue.css';
			@import '@radix-ui/colors/ruby.css';
			:root {
				--gap-quarter: 0.25rem;
				--gap-half: 0.5rem;
				--gap: 1rem;
				--gap-double: 2rem;
				--radius: 4px;
			}
			* {
				box-sizing: border-box;
				word-break: break-word;
			}
			html,
			body {
				padding: 0;
				margin: 0;
				font-size: 16px;
			}
			.balance {
				text-wrap: balance;
			}
			.scale {
				transition: transform 250ms cubic-bezier(0.05, 0, 0, 1) 0s;
			}

			body {
				min-height: 100vh;
				background: var(--mauve-1);
				color: var(--mauve-12);
				/*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
				background-position:
					0 0,
					25px 25px;
				background-attachment: fixed;
				background-size: 50px 50px;

				/* Hack */
				overflow-x: hidden;

				-webkit-font-smoothing: antialiased;
				-webkit-text-size-adjust: 100%;
			}

			h1,
			h2,
			h3,
			h4,
			h5,
			h6 {
				font-family: theme('fontFamily.heading');
			}
			/* pembetulan ol list di notion block */
			ol > li.defaul,
			ul > li.default {
				padding: 6px 0;
				white-space: pre-wrap;
			}
			figure {
				margin: 0;
				font-size: 0.85rem;
				color: #999;
				line-height: 1.8rem;
			}

			a {
				text-decoration: none;
			}
			a:hover {
				cursor: pointer;
			}

			mark {
				padding: var(--gap-quarter);
				border-radius: var(--radius);
				background: rgba(247, 212, 255, 0.8);
			}

			h1 {
				margin: 0;
				font-size: 2rem;
				font-weight: 700;
			}

			@media (max-width: 640px) {
				h1 {
					font-size: 1.6rem;
				}
			}

			ol {
				font-weight: 400;
				font-size: 0.9rem;
				line-height: 1.8rem;
			}
			p,
			ul {
				font-weight: 400;
				font-size: 1rem;
				line-height: 1.8rem;
			}
			ul,
			ol {
				margin: 0;
				padding-inline-start: 1.5rem;
			}
			pre {
				margin: 0;
				white-space: pre;
				tab-size: 2;
			}
			pre :global(code) {
				overflow: auto;
				-webkit-overflow-scrolling: touch;
			}

			hr {
				display: block;
				height: 1px;
				border: 0;
				margin: 0.3rem 0;
				background-color: #333;
			}

			code {
				font-size: 0.9rem;
				background: rgba(135, 131, 120, 0.15);
				color: #eb5757;
				padding: 0.25rem;
				border-radius: var(--radius);
				font-family: var(--font-mono);
			}

			table {
				display: block;
				overflow-x: auto;
				white-space: nowrap;
				border-collapse: collapse;
			}

			table tr {
				vertical-align: top;
			}

			table th {
				font-weight: 600;
				background-color: #f4f4f4;
			}

			table td,
			table th {
				font-size: 0.9rem;
				border: 1px solid #e4e4e4;
				padding: 0.5rem 1rem;
				text-align: left;
				line-height: 1.2rem;
			}
			table td::after {
				content: '';
				display: inline-block;
				min-height: 0.9rem;
			}
		</style>
	</body></html
>
