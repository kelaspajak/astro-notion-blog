---
import type { SelectProperty } from '../../../lib/interfaces.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
import {
  getPostsByTag,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'
import Card from '../../../components/Card.astro'

import '../../../styles/notion-color.css'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout title={`Posts in ${tag}`} path={`/posts/tag/${tag}`}>
  <div
    slot="main"
    class="max-w-5xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto"
  >
    <!-- Title -->
    <div class="max-w-2xl mx-auto text-center mb-10 lg:mb-14">
      <h2
        class="text-2xl font-bold md:text-4xl md:leading-tight ${currentTag.color}"
      >
        {tag}
      </h2>
      <p class="mt-1 hidden">...</p>
    </div>
    <!-- End Title -->

    <!-- Grid -->
    <div class="grid sm:grid-cols-2 gap-6">
      <!-- Card -->
      {
        posts.length === 0 ? (
          <NoContents contents={posts} />
        ) : (
          posts.map((post) => <Card post={post} />)
        )
      }
      <!-- End Card -->
    </div>
    <!-- End Grid -->

    <footer>
      <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>
  <!-- End Card Blog -->

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="Recommended" posts={rankedPosts} />
    <BlogTagsLink heading="Categories" tags={tags} />
  </div>
</Layout>

<style>
  .tag-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 640px) {
    .tag-container {
      font-size: 1.15rem;
    }
  }
  .tag-container span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: var(--gray-6);
  }
</style>
