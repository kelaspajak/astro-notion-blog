---
import type { SelectProperty } from '../../../lib/interfaces.ts';
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts';
import {
	getPostsByTag,
	getRankedPosts,
	getAllTags,
	getNumberOfPagesByTag,
} from '../../../lib/notion/client.ts';
import Layout from '../../../layouts/Layout.astro';
import NoContents from '../../../components/NoContents.astro';
import PostDate from '../../../components/PostDate.astro';
import PostTags from '../../../components/PostTags.astro';
import PostTitle from '../../../components/PostTitle.astro';
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro';
import PostExcerpt from '../../../components/PostExcerpt.astro';
import ReadMoreLink from '../../../components/ReadMoreLink.astro';
import Pagination from '../../../components/Pagination.astro';
import BlogPostsLink from '../../../components/BlogPostsLink.astro';
import BlogTagsLink from '../../../components/BlogTagsLink.astro';
import styles from '../../../styles/blog.module.css';
import Card from '../../../components/Card.astro';

import '../../../styles/notion-color.css';

export async function getStaticPaths() {
	const allTags = await getAllTags();
	return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }));
}

const { tag } = Astro.params;

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
	getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
	getRankedPosts(),
	getAllTags(),
	getNumberOfPagesByTag(tag),
]);

const currentTag = posts[0].Tags.find((t) => t.name === tag);
---

<Layout title={`Posts in ${tag}`} path={`/posts/tag/${tag}`}>
	<div slot="main" class="max-w-5xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
		<!-- Title -->
		<div class="max-w-2xl mx-auto text-center mb-10 lg:mb-14">
			<h2 class="text-2xl font-bold md:text-4xl md:leading-tight ${currentTag.color}">{tag}</h2>
			<p class="mt-1 text-gray-600 dark:text-gray-400 hidden">
				See how game-changing companies are making the most of every engagement with Preline.
			</p>
		</div>
		<!-- End Title -->

		<!-- Grid -->
		<div class="grid sm:grid-cols-2 gap-6">
			<!-- Card -->
			{posts.length === 0 ? <NoContents contents={posts} /> : posts.map((post) => <Card post={post}/>)}
			<!-- End Card -->
		</div>
		<!-- End Grid -->

		<!-- Card -->
		<div class="mt-12 text-center">
			<a
				class="inline-flex justify-center items-center gap-x-2 text-center bg-white border hover:border-gray-300 text-sm text-blue-600 hover:text-blue-700 font-medium hover:shadow-sm rounded-full focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 focus:ring-offset-white transition py-3 px-4 dark:bg-slate-900 dark:border-gray-700 dark:hover:border-gray-600 dark:text-blue-500 dark:hover:text-blue-400 dark:hover:shadow-slate-700/[.7] dark:focus:ring-gray-700 dark:focus:ring-offset-gray-800"
				href="#"
			>
				Read more
				<svg class="w-2.5 h-2.5" width="16" height="16" viewBox="0 0 16 16" fill="none">
					<path
						d="M5.27921 2L10.9257 7.64645C11.1209 7.84171 11.1209 8.15829 10.9257 8.35355L5.27921 14"
						stroke="currentColor"
						stroke-width="2"
						stroke-linecap="round"></path>
				</svg>
			</a>
		</div>
		<!-- End Card -->
	</div>
	<!-- End Card Blog -->

	<div slot="aside" class={styles.aside}>
		<BlogPostsLink heading="Recommended" posts={rankedPosts} />
		<BlogTagsLink heading="Categories" tags={tags} />
	</div>
</Layout>

<style>
	.tag-container {
		margin: 0;
		line-height: 1.3;
		font-size: 1.2rem;
		font-weight: normal;
	}
	@media (max-width: 640px) {
		.tag-container {
			font-size: 1.15rem;
		}
	}
	.tag-container span.tag {
		border-radius: 4px;
		padding: 3px 9px;
		background: var(--tag-bg-light-gray);
	}
	
</style>
